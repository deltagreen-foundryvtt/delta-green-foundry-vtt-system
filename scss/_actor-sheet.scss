@use "vars" as *;

@mixin grid-styles($start: 1, $end: 12) {
  .grid {
    display: grid;
    grid-column: span 2 / span 2;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 3px;
  }

  @for $i from $start through $end {
    .grid-#{$i}col {
      grid-column: span $i / span $i;
      grid-template-columns: repeat($i, minmax(0, 1fr));
    }
  }
}

.#{$system-id}.actor {
  .window-content {
    @include grid-styles;

    .sheet-header {
      display: flex;
      overflow: hidden;

      flex: 0 0 auto;
      flex-direction: row;
      flex-wrap: wrap;
      display: flex;
      justify-content: flex-start;

      margin-bottom: 8px;

      .header-top {
        margin-bottom: 5px;

        .profile-img {
          height: 100px;
          flex: 0 0 100px;

          cursor: var(--cursor-pointer); /* Variable name from Foundry */

          border: 1px solid black;
          margin-right: 5px;
        }

        h1.charname {
          height: 55px;

          font-family: inherit;
          font-size: 2rem;

          padding: 0px;
          border-bottom: 0;
          margin-bottom: 0;
        }

        h2.profession {
          font-family: inherit;
          font-size: 1.5rem;
          border-bottom: 0;
          margin-top: 5px;
          margin-bottom: 0;

          input {
            width: 100%;
            height: 40px;
            margin: 0;
          }
        }
      }

      .resources {
        .resource-outer-grid-1col {
          display: grid;
          grid-template-columns: 100%;
          align-items: center;
          justify-content: center;
          border: 1.5px solid #000000;
          padding: 5px;
          grid-gap: 3px;
          text-align: center;
          border-radius: 2px;

          .resource-label {
            font-weight: bold;
          }

          .resource-inner-grid-3col {
            display: grid;
            grid-template-columns: 35% 30% 35%;
            align-items: center;
            text-align: center;

            input.breaking-point-hit {
              color: rgb(255, 255, 255);
              background-color: rgb(117, 0, 0);
              font-weight: bold;
            }

            div.max-resource-value {
              border: 1px solid rgb(122, 121, 113);
              border-radius: 3px;
              height: 100%;
              display: flex;
              justify-content: center;
              align-items: center;
            }
          }
        }
      }
    }

    nav.sheet-tabs {
      $-height: 1.5rem;
      height: $-height;
      line-height: $-height;
      text-align: center;
      vertical-align: middle;

      border: none;
      padding-bottom: 0px !important;
      margin-bottom: 0px !important;

      a[data-action="tab"] {
        height: inherit;
        line-height: inherit;

        color: inherit;
        font-weight: bold;

        border-radius: 5px 5px 0 0;
        border-color: #000;
        border-width: 1px 1px 0;
        border-style: solid;
        padding-inline: 10px;

        &.active {
          font-style: italic;
          text-shadow: none;

          border: #000;
          border-width: 2px 2px 0;
          border-style: solid;
        }
      }
    }

    .tab {
      height: 100%;
      overflow-y: auto;

      border-color: #000;
      border-width: 2px;
      border-style: solid;
      border-radius: 3px;

      padding: 5px;

      .grid-13row {
        // If the user wishes to sort skills by column, we need to
        // explicitly define a number of rows, rather than columns.

        grid-template-rows: repeat(13, minmax(0, auto)) !important;
        grid-template-columns: repeat(auto-fit, minmax(0, 1fr)) !important;
        grid-auto-flow: column !important;
      }

      div.horizontal-bar-section-divider {
        display: grid;
        grid-template-columns: 100%;
        justify-content: center;
        align-items: center;
        text-align: center;

        margin-bottom: 3px;

        background: #000;
        color: #fff;
        height: 30px;

        border-radius: 3px 3px 3px 3px;

        &.skills-header {
          display: grid;
          grid-template-columns: repeat(3, 1fr);
          justify-content: center;
          align-items: center;
          text-align: center;

          margin-bottom: 3px;

          background: #000;
          color: #fff;
          height: 30px;

          border-radius: 3px 3px 3px 3px;
        }

        .skills-header-title {
          grid-column: 2;
        }

        .toggle-untrained {
          grid-column: 3;
          padding-right: 0.5rem;
          justify-self: end;
        }
      }

      &.skills {
        .skill-util-buttons {
          margin: 5px;

          .typed-skill-add {
            margin-right: 5px;
          }

          [data-action="applySkillImprovements"] {
            float: right;
          }

          .action-pill {
            font-size: 0.8rem;
            font-weight: bold;

            background-color: rgba(0, 0, 0, 0.185);

            border-radius: 2.5px;
            padding: 2px;
          }
        }

        .skill-label {
          margin: 2px;
          align-content: flex-start;
        }

        .skill-type-label {
          margin: 2px;
        }

        input.percentile-skill-input {
          flex: 0 0 40px;
          margin: 0 5px;
          height: 1.2rem;
          align-self: center;
          text-align: center;
        }

        input.checkbox-skill-input {
          flex: 0 0 20px;
          line-height: 10px;
          width: 1px;
        }

        .skill-and-training-controls {
          flex: 0 0 35px;
        }
      }
    }
  }
}
